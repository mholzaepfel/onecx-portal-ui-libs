@use 'sass:math';

.p-inputswitch {
  width: var(--input-switch-width);
  height: var(--input-switch-height);

  .p-inputswitch-slider {
    background: var(--input-switch-slider-off-bg);
    transition: var(--form-element-transition);
    border-radius: var(--input-switch-border-radius);

    &:before {
      background: var(--input-switch-handle-off-bg);
      width: var(--input-switch-handle-width);
      height: var(--input-switch-handle-height);
      left: var(--input-switch-slider-padding);
      margin-top: math.div(-1 * $inputSwitchHandleHeight, 2);
      border-radius: var(--input-switch-handle-border-radius);
      transition-duration: var(--transition-duration);
    }
  }

  &.p-inputswitch-checked {
    .p-inputswitch-slider:before {
      transform: translateX($inputSwitchHandleWidth);
    }
  }

  &.p-focus {
    .p-inputswitch-slider {
      @include focused();
    }
  }

  &:not(.p-disabled):hover {
    .p-inputswitch-slider {
      background: var(--input-switch-slider-off-hover-bg);
    }
  }

  &.p-inputswitch-checked {
    .p-inputswitch-slider {
      background: var(--input-switch-slider-on-bg);

      &:before {
        background: var(--primary-color, var(--primary-color-default));
      }
    }

    &:not(.p-disabled):hover {
      .p-inputswitch-slider {
        background: var(--input-switch-slider-on-hover-bg);
      }
    }
  }
}

p-inputswitch.ng-dirty.ng-invalid > .p-inputswitch {
  @include invalid-input();
}
